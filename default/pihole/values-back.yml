image:
  tag: v5.8.1

maxSurge: 2
maxUnavailable: 1

replicaCount: 1

serviceWeb:
  http:
    enabled: true
    port: 80
  https:
    enabled: false
    port: 443
  type: ClusterIP
  externalTrafficPolicy: Local
  loadBalancerIP: ""
    # a fixed LoadBalancer IP
  annotations: {}
    # metallb.universe.tf/address-pool: network-services
    # metallb.universe.tf/allow-shared-ip: pihole-svc

serviceDns:
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerIP: "192.168.79.52"
  annotations:
    metallb.universe.tf/allow-shared-ip: pihole-back-svc

resources:
  requests:
    cpu: "50m"
    memory: "100Mi"
  limits:
    cpu: "1000m"
    memory: "500Mi"

persistentVolumeClaim:
  enabled: false
  accessModes:
    - ReadWriteOnce
  size: "5Gi"
  storageClass: longhorn

# default upstream DNS servers to use
DNS1: "1.1.1.1"
DNS2: "1.0.0.1"

virtualHost: pihole-back.home

dnsmasq:
  upstreamServers: []
  # Here you can add upstream dns servers with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - server=/foo.bar/192.168.178.10
  # - server=/bar.foo/192.168.178.11

  customDnsEntries:
    - address=/hammy.home/192.168.78.50
    - address=/.home/192.168.79.50

  # Here you can add custom dns entries to override the
  # dns resolution with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - address=/foo.bar/192.168.178.10
  # - address=/bar.foo/192.168.178.11

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    # virtualHost (default value is pi.hole) will be appended to the hosts
    - pihole-back.home
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #     #- virtualHost (default value is pi.hole) will be appended to the hosts
  #      - chart-example.local

antiaff:
  # set to true to enable antiaffinity (example: 2 pihole DNS in the same cluster)
  enabled: true
  # Here you can set the pihole release (you set in `helm install <releasename> ...`)
  # you want to avoid
  avoidRelease: pihole
  # Here you can choose between preferred or required
  strict: true
